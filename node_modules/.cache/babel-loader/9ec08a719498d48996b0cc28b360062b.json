{"ast":null,"code":"var _jsxFileName = \"D:\\\\placement\\\\home\\\\react complete course\\\\google keep app\\\\my-google-keep\\\\src\\\\components\\\\Header\\\\DailyQuotes\\\\Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './Index.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [quote, setQuote] = useState('');\n\n  const getQuotes = () => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(data => {\n      let randomNum = Math.floor(Math.random() * data.length);\n      setQuote(data[randomNum]);\n    });\n  };\n\n  useEffect(() => {\n    getQuotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"quote-head\",\n        children: \"Quotes of the Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quote-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), quote.text, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n        children: quote.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"cite\", {\n        className: \"quote-author\",\n        children: [\"~ \", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getQuotes,\n        type: \"submit\",\n        className: \"button-new-quote\",\n        children: \"Get new Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"+0fjIodrFDijtLyRDbc2ItdycKA=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/placement/home/react complete course/google keep app/my-google-keep/src/components/Header/DailyQuotes/Index.jsx"],"names":["React","useEffect","useState","Index","quote","setQuote","getQuotes","fetch","then","res","json","data","randomNum","Math","floor","random","length","text","author"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcJ,IAAI,CAACK,MAA9B,CAAhB;AACAX,MAAAA,QAAQ,CAACM,IAAI,CAACC,SAAD,CAAL,CAAR;AACD,KALD;AAMD,GAPD;;AASAX,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS;AACV,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA,gCACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGF,KAAK,CAACa,IAJT,eAKE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAA,kBAAOb,KAAK,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,yBAAkCZ,KAAK,CAACc,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAQ,QAAA,OAAO,EAAEZ,SAAjB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,SAAS,EAAC,kBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtCD;;GAAMH,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport './Index.css'\r\nimport { useState } from 'react';\r\n\r\nconst Index = () => {\r\n\r\n  const[quote, setQuote]= useState('');\r\n\r\n  const getQuotes = () => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      let randomNum = Math.floor(Math.random()*data.length);\r\n      setQuote(data[randomNum]);\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuotes();\r\n  },[]);\r\n\r\n  return (\r\n    <div className=\"quote-wrapper\">\r\n      <div className=\"quote-card\">\r\n        <h2 className=\"quote-head\">Quotes of the Day</h2>\r\n        <p className=\"quote-text\">\r\n          <span>\r\n            <h2>\"</h2>\r\n          </span>\r\n          {quote.text}\r\n          <span>\r\n            <h2>\"</h2>\r\n          </span>\r\n        </p>\r\n        <cite>{quote.length}</cite>\r\n        <cite className=\"quote-author\">~ {quote.author}</cite>\r\n        <button onClick={getQuotes} type=\"submit\" className=\"button-new-quote\">\r\n          Get new Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}